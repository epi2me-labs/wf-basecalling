{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/epi2me-labs/wf-basecalling/master/nextflow_schema.json",
  "title": "epi2me-labs/wf-basecalling pipeline parameters",
  "description": "Helper workflow for basecalling ONT reads.",
  "type": "object",
  "definitions": {
    "input_options": {
      "title": "Input options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data",
      "required": ["input"],
      "properties": {
        "input": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$",
          "description": "Directory containing FAST5 (or POD5) signal for basecalling.",
          "help_text": "Directory containing FAST5 (or POD5) signal for basecalling.",
          "fa_icon": "fas fa-file-csv"
        },
        "ref": {
          "type": "string",
          "description": "Optional reference FASTA file to align basecalled reads to.",
          "help_text": "Optional reference FASTA file to align basecalled reads to."
        }
      }
    },
    "output_options": {
      "title": "Output options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "out_dir": {
          "type": "string",
          "default": "output",
          "description": "Directory for output of all files."
        },
        "sample_name": {
          "type": "string",
          "default": "SAMPLE",
          "description": "Sample name to prefix file names of workflow outputs."
        },
        "fastq_only": {
          "type": "boolean",
          "description": "Output unaligned FASTQ instead of unaligned CRAM"
        },
        "output_bam": {
          "type": "boolean",
          "description": "Output unaligned BAM instead of unaligned CRAM"
        }
      }
    },
    "basecalling_options": {
      "title": "Basecalling options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "basecaller_cfg": {
          "type": "string",
          "description": "Name of the model to use for converting signal.",
          "enum": [
            "dna_r10.4.1_e8.2_260bps_fast@v4.1.0",
            "dna_r10.4.1_e8.2_260bps_hac@v4.1.0",
            "dna_r10.4.1_e8.2_260bps_sup@v4.1.0",
            "dna_r10.4.1_e8.2_400bps_fast@v4.1.0",
            "dna_r10.4.1_e8.2_400bps_fast@v4.2.0",
            "dna_r10.4.1_e8.2_400bps_hac@v4.1.0",
            "dna_r10.4.1_e8.2_400bps_hac@v4.2.0",
            "dna_r10.4.1_e8.2_400bps_sup@v4.1.0",
            "dna_r10.4.1_e8.2_400bps_sup@v4.2.0",
            "dna_r9.4.1_e8_fast@v3.4",
            "dna_r9.4.1_e8_hac@v3.3",
            "dna_r9.4.1_e8_sup@v3.3",
            "rna002_70bps_fast@v3",
            "rna002_70bps_hac@v3",
            "rna004_130bps_fast@v3",
            "rna004_130bps_hac@v3",
            "rna004_130bps_sup@v3"
          ]
        },
        "duplex": {
          "type": "boolean",
          "description": "Run the basecaller in duplex mode."
        },
        "remora_cfg": {
          "type": "string",
          "description": "Name of the model to use for calling modified bases.",
          "enum": [
            "dna_r10.4.1_e8.2_400bps_fast@v4.1.0_5mCG_5hmCG@v2",
            "dna_r10.4.1_e8.2_400bps_fast@v4.2.0_5mCG_5hmCG@v2",
            "dna_r10.4.1_e8.2_400bps_hac@v4.1.0_5mCG_5hmCG@v2",
            "dna_r10.4.1_e8.2_400bps_hac@v4.2.0_5mCG_5hmCG@v2",
            "dna_r10.4.1_e8.2_400bps_sup@v4.1.0_5mCG_5hmCG@v2",
            "dna_r10.4.1_e8.2_400bps_sup@v4.2.0_5mC@v2",
            "dna_r10.4.1_e8.2_400bps_sup@v4.2.0_5mCG_5hmCG@v2",
            "dna_r10.4.1_e8.2_400bps_sup@v4.2.0_6mA@v2",
            "dna_r9.4.1_e8_fast@v3.4_5mCG@v0.1",
            "dna_r9.4.1_e8_fast@v3.4_5mCG_5hmCG@v0",
            "dna_r9.4.1_e8_hac@v3.3_5mCG@v0.1",
            "dna_r9.4.1_e8_hac@v3.3_5mCG_5hmCG@v0",
            "dna_r9.4.1_e8_sup@v3.3_5mCG@v0.1",
            "dna_r9.4.1_e8_sup@v3.3_5mCG_5hmCG@v0"
          ]
        },
        "dorado_ext": {
          "type": "string",
          "default": "pod5",
          "description": "File extension for Dorado inputs.",
          "enum": ["fast5", "pod5"]
        }
      }
    },
    "advanced_basecalling_options": {
      "title": "Advanced basecalling options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "output_pod5": {
          "type": "boolean",
          "description": "Save the converted POD5 when running in duplex with FAST5 inputs."
        },
        "qscore_filter": {
          "type": "integer",
          "default": 10,
          "description": "Mean qscore by which to filter reads. Inclusive such that reads with score >= qscore_filter are kept."
        },
        "basecaller_chunk_size": {
          "type": "integer",
          "default": 25,
          "description": "Number of input files to basecall in each basecalling process."
        },
        "cuda_device": {
          "type": "string",
          "default": "cuda:all",
          "description": "GPU device to use for basecalling"
        },
        "basecaller_model_path": {
          "type": "string",
          "description": "Override the named basecalling model with a custom basecalling model"
        },
        "remora_model_path": {
          "type": "string",
          "description": "Override the named remora model with a custom remora model"
        },
        "basecaller_basemod_threads": {
          "type": "integer",
          "default": 2,
          "description": "Number of threads to use for base modification calling."
        },
        "basecaller_args": {
          "type": "string",
          "description": "Additional command line arguments to pass to the basecaller process."
        }
      }
    },
    "multiprocessing_options": {
      "title": "Multiprocessing Options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "ubam_map_threads": {
          "type": "integer",
          "default": 8,
          "description": "Set max number of threads to use for aligning reads from uBAM (limited by config executor cpus)"
        },
        "ubam_sort_threads": {
          "type": "integer",
          "default": 3,
          "description": "Set max number of threads to use for sorting and indexing aligned reads from uBAM (limited by config executor cpus)"
        },
        "ubam_bam2fq_threads": {
          "type": "integer",
          "default": 1,
          "description": "Set max number of threads to use for uncompressing uBAM and generating FASTQ for alignment (limited by config executor cpus)"
        },
        "merge_threads": {
          "type": "integer",
          "default": 4,
          "description": "Set max number of threads to use for merging BAM files (limited by config executor cpus)"
        },
        "stats_threads": {
          "type": "integer",
          "default": 4,
          "description": "Set max number of threads to use for getting stats from output files. (limited by config executor cpus)"
        }
      }
    },
    "real_time_analysis_options": {
      "title": "Real Time Analysis Options",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "watch_path": {
          "type": "boolean",
          "description": "Enable to continuously watch the input directory for new input files. Reads will be analysed as they appear."
        },
        "read_limit": {
          "type": "string",
          "description": "Stop processing data when a particular number of reads have been analysed."
        }
      }
    },
    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-file-import",
      "description": "Less common options for the pipeline, typically set in a config file.",
      "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
      "properties": {
        "help": {
          "type": "boolean",
          "description": "Display help text.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        },
        "version": {
          "type": "boolean",
          "description": "Display version and exit.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        },
        "disable_ping": {
          "type": "boolean",
          "hidden": true
        }
      }
    },
    "other_parameter": {
      "title": "Other parameter",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "aws_image_prefix": {
          "type": "string"
        },
        "aws_queue": {
          "type": "string"
        },
        "monochrome_logs": {
          "type": "boolean",
          "description": "Do not use coloured log outputs.",
          "fa_icon": "fas fa-palette",
          "hidden": true
        },
        "validate_params": {
          "type": "boolean",
          "description": "Boolean whether to validate parameters against the schema at runtime",
          "default": true,
          "fa_icon": "fas fa-check-square",
          "hidden": true
        },
        "show_hidden_params": {
          "type": "string"
        },
        "schema_ignore_params": {
          "type": "string",
          "default": "show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf"
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/input_options"
    },
    {
      "$ref": "#/definitions/output_options"
    },
    {
      "$ref": "#/definitions/basecalling_options"
    },
    {
      "$ref": "#/definitions/advanced_basecalling_options"
    },
    {
      "$ref": "#/definitions/multiprocessing_options"
    },
    {
      "$ref": "#/definitions/real_time_analysis_options"
    },
    {
      "$ref": "#/definitions/generic_options"
    },
    {
      "$ref": "#/definitions/other_parameter"
    }
  ]
}
